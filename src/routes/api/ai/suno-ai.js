import express from "express";
import axios from "axios";
import { v4 as uuidv4 } from "uuid";

const router = express.Router();

/* 🎵 ثابت لصورة افتراضية */
const IMAGE_URL = "https://qu.ax/lOcWx.jpg";

/* 🔢 مولد أكواد تتبع وهمية */
function randomHex(length) {
  const chars = "abcdef0123456789";
  return Array.from({ length }, () => chars[Math.floor(Math.random() * chars.length)]).join("");
}
function gieneticTrace() {
  return `${randomHex(32)}-${randomHex(16)}`;
}

/* 🌐 اكتشاف اللغة */
function detectLanguage(text) {
  return /[\u0600-\u06FF]/.test(text) ? "arabic" : "english";
}

/* 🧩 تسجيل الدخول */
async function login(deviceId) {
  const res = await axios.post(
    "https://api.sunora.mavtao.com/api/auth/login",
    { device_id: deviceId },
    {
      headers: {
        "user-agent": "Dart/3.4 (gienetic_build)",
        version: "2.2.2",
        "accept-encoding": "gzip",
        "content-type": "application/json",
        buildnumber: "105",
        platform: "android",
        "sentry-trace": gieneticTrace(),
      },
    }
  );
  return res.data?.data?.token || null;
}

/* 🔁 متابعة النتيجة */
async function pollResult(xAuth, maxAttempts = 30, delayMs = 30000) {
  for (let attempt = 1; attempt <= maxAttempts; attempt++) {
    try {
      const res = await axios.get(
        "https://api.sunora.mavtao.com/api/music/music_page?page=1&pagesize=50",
        {
          headers: {
            "user-agent": "Dart/3.4 (gienetic_build)",
            version: "2.2.2",
            "accept-encoding": "gzip",
            "x-auth": xAuth,
            buildnumber: "105",
            platform: "android",
            "sentry-trace": gieneticTrace(),
          },
        }
      );

      const records = res.data?.data?.records || [];
      const doneSongs = records.filter((r) => r.status === "complete");

      if (doneSongs.length > 0) {
        return doneSongs.map((r) => ({
          id: r.song_id,
          title: r.title || "Generated by Sunora",
          tags: r.meta_tags,
          prompt: r.meta_prompt,
          audioUrl: r.audio_url,
          videoUrl: r.video_url,
          imageUrl: r.image_url,
          model: r.model_name,
        }));
      }
    } catch {}
    await new Promise((r) => setTimeout(r, delayMs));
  }
  return [];
}

/* 🎶 إنشاء أغنية */
async function generateSong(description, language = "english") {
  const deviceId = uuidv4();
  const token = await login(deviceId);
  if (!token) throw new Error("فشل تسجيل الدخول إلى Sunora API");

  await axios.post(
    "https://api.sunora.mavtao.com/api/music/advanced_custom_generate",
    { description, instrumental_only: false, language },
    {
      headers: {
        "user-agent": "Dart/3.4 (gienetic_build)",
        version: "2.2.2",
        "accept-encoding": "gzip",
        "x-auth": token,
        "content-type": "application/json",
        buildnumber: "105",
        platform: "android",
        "sentry-trace": gieneticTrace(),
      },
    }
  );

  return await pollResult(token);
}

/* 🎧 POST: توليد أغنية */
router.post("/", async (req, res) => {
  try {
    const { prompt, genre = "pop", gender = "female", language } = req.body;
    if (!prompt) return res.status(400).json({ status: false, message: "⚠️ النص مطلوب (prompt)" });

    const lang = language || detectLanguage(prompt);

    const fullPrompt =
      lang === "arabic"
        ? `${prompt}. النوع: ${genre}. الصوت: ${gender}. قم بإنشاء أغنية عربية كاملة تحتوي على مقدمة، كوبليه، كورس، جسر، وخاتمة.`
        : `${prompt}. style: ${genre}. voice: ${gender}. Make a full-length English song with intro, verse, chorus, bridge, and outro.`;

    const results = await generateSong(fullPrompt, lang);
    if (!results.length) return res.status(500).json({ status: false, message: "❌ فشل توليد الأغنية" });

    const song = results[0];
    res.json({
      status: true,
      message: "✅ تم إنشاء الأغنية بنجاح",
      info: {
        title: song.title,
        genre,
        language: lang,
        gender,
      },
      urls: {
        image: song.imageUrl || IMAGE_URL,
        audio: song.audioUrl || null,
        video: song.videoUrl || null,
      },
      lyrics: song.prompt || null,
      model: song.model,
    });
  } catch (err) {
    console.error("Sunora Error:", err.message);
    res.status(500).json({ status: false, message: "❌ حدث خطأ أثناء إنشاء الأغنية", error: err.message });
  }
});

/* 🎼 GET: توليد أغنية عبر الرابط */
router.get("/", async (req, res) => {
  try {
    const prompt = req.query.prompt;
    const genre = req.query.genre || "pop";
    const gender = req.query.gender || "female";
    const language = req.query.language;

    if (!prompt) return res.status(400).json({ status: false, message: "⚠️ النص مطلوب (prompt)" });

    const lang = language || detectLanguage(prompt);

    const fullPrompt =
      lang === "arabic"
        ? `${prompt}. النوع: ${genre}. الصوت: ${gender}. قم بإنشاء أغنية عربية كاملة تحتوي على مقدمة، كوبليه، كورس، جسر، وخاتمة.`
        : `${prompt}. style: ${genre}. voice: ${gender}. Make a full-length English song with intro, verse, chorus, bridge, and outro.`;

    const results = await generateSong(fullPrompt, lang);
    if (!results.length) return res.status(500).json({ status: false, message: "❌ فشل توليد الأغنية" });

    const song = results[0];
    res.json({
      status: true,
      message: "✅ تم إنشاء الأغنية بنجاح",
      info: {
        title: song.title,
        genre,
        language: lang,
        gender,
      },
      urls: {
        image: song.imageUrl || IMAGE_URL,
        audio: song.audioUrl || null,
        video: song.videoUrl || null,
      },
      lyrics: song.prompt || null,
      model: song.model,
    });
  } catch (err) {
    console.error("Sunora Error:", err.message);
    res.status(500).json({ status: false, message: "❌ حدث خطأ أثناء إنشاء الأغنية", error: err.message });
  }
});

export default router;